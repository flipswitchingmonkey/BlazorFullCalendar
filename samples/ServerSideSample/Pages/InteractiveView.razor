@inherits CalendarPageBase
@inject IJSRuntime _jsRuntime

@page "/interactive"

<h3>Interractive View (Array Source) - First Instance</h3>

<FullCalendar settings="@_calendarSettings" OnEventClick="OnClickHandler" OnEventChange="OnResizeHandler"/>

<br/>

<h3>Interractive View (Array Source) - Second Instance</h3>

<FullCalendar settings="@_calendarSettings" OnEventClick="SecondCalendarOnClickHandler" OnEventChange="OnResizeHandler"/>

@code {
    private CalendarSettings _calendarSettings { get; set; }

    private void OnClickHandler(CalendarEventChangeResponse response)
    {
        _jsRuntime.InvokeVoidAsync("alert", $"Click {response.Id} {response.Title}");
    }

    private void SecondCalendarOnClickHandler(CalendarEventChangeResponse response)
    {
        _jsRuntime.InvokeVoidAsync("alert", "22 " + response.ToString());
    }

    private void OnResizeHandler(CalendarEventChangeResponse response)
    {
        var oldEvent = eventList.FirstOrDefault(e => e.Id == response.Id);

        _jsRuntime.InvokeVoidAsync("alert", $"Change {response.Id} {response.Title} - New end date {response.End} - Old end date {oldEvent.End}");

        oldEvent.End = response.End;
    }

    protected override void OnInitialized()
    {
        eventList.AddRange(GetRandomEvents(50));

        _calendarSettings = new CalendarSettings()
        {
            Plugins = new[] { CalendarPluginTypes.DayGrid, CalendarPluginTypes.Interaction, CalendarPluginTypes.Bootstrap },
            InitialView = "dayGridTwoMonths",
            TimeZone = "UTC",
            Editable = true,
            HeaderToolbar  = new CalendarHeader()
            {
                Left = "title",
                Center = "",
                Right = "dayGridOneWeek,dayGridTwoWeeks,dayGridTwoMonths today prev,next"
            },
            ThemeSystem = "bootstrap",
            Views = new Dictionary<string, CalendarViewDefinition>()
            {
                { "dayGridOneWeek", CalendarViewDefinition.DayGridWeeks(1,"One Week") },
                { "dayGridTwoWeeks", CalendarViewDefinition.DayGridWeeks(2,"Two Weeks") },
                { "dayGridTwoMonths", CalendarViewDefinition.DayGridMonths(2,"Two Months") },
            },
            Events = eventList.ToArray()
        };
    }
}
